// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using controleDeFuncionarios.Dao;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleDeFuncionarios.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517164843_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("controleDeFuncionarios.Models.Cargo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.DadosBancarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("agencia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("banco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("conta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cpfTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("emailTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nomeTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("telefoneTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("tipoConta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("DadosBancarios");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoLogradouro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Funcionario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("cargoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dadosBancariosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("enderecoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pessoaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("salario")
                        .HasColumnType("TEXT");

                    b.Property<int>("setorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("cargoId");

                    b.HasIndex("dadosBancariosId");

                    b.HasIndex("enderecoID");

                    b.HasIndex("pessoaId");

                    b.HasIndex("setorId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Pessoa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("enderecoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Setor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Funcionario", b =>
                {
                    b.HasOne("controleDeFuncionarios.Models.Cargo", "cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("cargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("controleDeFuncionarios.Models.DadosBancarios", "dadosBancarios")
                        .WithMany()
                        .HasForeignKey("dadosBancariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("controleDeFuncionarios.Models.Endereco", "endereco")
                        .WithMany("Funcionarios")
                        .HasForeignKey("enderecoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("controleDeFuncionarios.Models.Pessoa", "pessoa")
                        .WithMany("Funcionarios")
                        .HasForeignKey("pessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("controleDeFuncionarios.Models.Setor", "setor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("setorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cargo");

                    b.Navigation("dadosBancarios");

                    b.Navigation("endereco");

                    b.Navigation("pessoa");

                    b.Navigation("setor");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Endereco", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Pessoa", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("controleDeFuncionarios.Models.Setor", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
